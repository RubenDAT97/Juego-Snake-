import tkinter as tk
import time

# Crear la ventana principal
root = tk.Tk()
root.title("Reloj Digital y Cronómetro")
root.geometry("400x300")
root.resizable(0, 0)

# Variables globales para el cronómetro
tiempo_inicial = 0
contador_activo = False

# Función para actualizar la hora del reloj
def actualizar_hora():
    hora_actual = time.strftime('%H:%M:%S')  # Obtener la hora en formato 24 horas
    etiqueta_hora.config(text=hora_actual)
    root.after(1000, actualizar_hora)

# Función para iniciar el cronómetro
def iniciar_cronometro():
    global tiempo_inicial, contador_activo
    if not contador_activo:
        tiempo_inicial = time.time() - tiempo_transcurrido  # Guardar el tiempo ya transcurrido
        contador_activo = True
        actualizar_cronometro()

# Función para pausar el cronómetro
def pausar_cronometro():
    global contador_activo
    contador_activo = False

# Función para reiniciar el cronómetro
def reiniciar_cronometro():
    global tiempo_transcurrido, contador_activo
    contador_activo = False
    tiempo_transcurrido = 0
    etiqueta_cronometro.config(text='00:00:00')

# Función para actualizar el cronómetro
def actualizar_cronometro():
    global tiempo_transcurrido
    if contador_activo:
        tiempo_transcurrido = time.time() - tiempo_inicial
        minutos = int(tiempo_transcurrido // 60)
        segundos = int(tiempo_transcurrido % 60)
        milisegundos = int((tiempo_transcurrido * 100) % 100)
        etiqueta_cronometro.config(text=f'{minutos:02}:{segundos:02}:{milisegundos:02}')
        root.after(10, actualizar_cronometro)  # Actualizar cada 10ms

# Estilo y configuración del reloj
etiqueta_hora = tk.Label(root, font=('Arial', 50), bg='black', fg='cyan', padx=10, pady=10)
etiqueta_hora.pack(pady=10)

# Estilo y configuración del cronómetro
etiqueta_cronometro = tk.Label(root, font=('Arial', 36), bg='black', fg='lime', padx=10, pady=10)
etiqueta_cronometro.pack(pady=10)

# Botones para controlar el cronómetro
boton_iniciar = tk.Button(root, text="Iniciar", font=('Arial', 14), command=iniciar_cronometro)
boton_iniciar.pack(side=tk.LEFT, padx=20, pady=20)

boton_pausar = tk.Button(root, text="Pausar", font=('Arial', 14), command=pausar_cronometro)
boton_pausar.pack(side=tk.LEFT, padx=20, pady=20)

boton_reiniciar = tk.Button(root, text="Reiniciar", font=('Arial', 14), command=reiniciar_cronometro)
boton_reiniciar.pack(side=tk.LEFT, padx=20, pady=20)

# Variables para el cronómetro
tiempo_transcurrido = 0

# Llamar a la función de actualizar la hora por primera vez
actualizar_hora()

# Ejecutar la aplicación
root.mainloop()
